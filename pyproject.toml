[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "pytximport"
description = "A python implementation of `tximport` to transform transcript into gene counts"
requires-python = ">=3.10"
license = { file = "LICENSE" }
authors = [{ name = "Malte Kuehl", email = "malte.kuehl@clin.au.dk" }]
readme = { file = "README.md", content-type = "text/markdown" }
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Healthcare Industry",
    "Natural Language :: English",
    "Typing :: Typed",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]
dynamic = ["version"]
dependencies = [
    "anndata>=0.8.0",
    "click>=8.0.0,<9",
    "click_default_group>=1.2.0,<2",
    "flox>=0.9.0,<0.11.0",
    "h5py>=3.0.0,<4",
    "numpy>=1.19.0,<3",
    "pandas>=2.2.0,<3",
    "pybiomart==0.2.0",
    "tqdm>=4.0.0,<5",
    "xarray>=2024.0.0",
]

[project.optional-dependencies]
pyarrow = ["pyarrow"]
biocpy = ["biocframe", "dolomite", "dolomite-se", "summarizedexperiment"]
dev = [
    "bandit",
    "biocframe",
    "certifi",
    "coverage",
    "dolomite",
    "dolomite-se",
    "flit",
    "furo",
    "ipykernel",
    "jupyter-client",
    "jupyter-core",
    "mypy",
    "myst-parser",
    "nbsphinx",
    "pandas-stubs",
    "pandoc",
    "pre-commit",
    "pyarrow",
    "pytest",
    "ruff==0.11.2",
    "sphinx",
    "sphinx-autoapi",
    "sphinx-autodoc-typehints",
    "sphinx-copybutton",
    "sphinx-design",
    "sphinx-rtd-theme",
    "summarizedexperiment",
    "types-tqdm",
]

[project.scripts]
pytximport = "pytximport:cli"

[project.urls]
Home = "https://github.com/complextissue/pytximport"
Source = "https://github.com/complextissue/pytximport"
Documentation = "https://pytximport.complextissue.com/en/stable/"

[tool.flit.sdist]
exclude = ["docs/*", "test/*"]

[tool.ruff]
include = [
    "pyproject.toml",
    "docs/**/*.py",
    "docs/**/*.ipynb",
    "pytximport/**/*.py",
    "test/**/*.py",
]
cache-dir = "~/.cache/ruff"
exclude = [".venv"]
line-length = 120

[tool.ruff.lint]
select = ["C4", "D", "I", "E4", "E7", "E9", "F", "N", "S"]
ignore = [
    "N802",
    "N803",
    "N806",
    "E731",
    "N815",
    "E402",
    "E203",
    "F841",
    "F811",
    "C901",
    "F401",
    "S101",
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
pydocstyle.convention = "google"
mccabe.max-complexity = 7
isort.case-sensitive = true
isort.order-by-type = true

[tool.ruff.format]
docstring-code-format = true
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
disallow_untyped_defs = true
python_version = "3.12"
ignore_missing_imports = true

[tool.pytest.ini_options]
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_level = "WARN"
log_cli = true

markers = [
    "no_github_ci: marks tests that should not be run on GitHub CI (deselect with '-m \"not no_github_ci\"')",
]

[tool.coverage.run]
source = ["pytximport"]
omit = ["*/test/*", "**/*/_cli.py"]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == __main__:",
    "if TYPE_CHECKING:",
    "raise",
    "except",
    "warning",
    "def __repr__",
    "def __str__",
    "file_path = Path",
    "return None",
] # don't complain if non-runnable code isn't run:
ignore_errors = true

[tool.coverage.html]
directory = "docs/coverage_report"
